{
  "hash": "6d31120ec630dd91e92965ceb95ca988",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Adding epubs to Kobo from my phone\"\ndate: 2023-06-12\n    \n---\n\n\n\n\n\nI've got a Kobo e-reader, which is very fussy about the USB cable used to copy books to it (and even the USB port the cable is connected to).\nI want to be able to sideload books from, e.g. [Project Gutenberg](https://www.gutenberg.org) to it from my phone.  The (beta) web browser that's included with \nthe Kobo is _very_ basic, and I've struggled to get it to work with most web sites, so the obvious solution doesn't really work.\n\nWith thanks to [this post](https://medium.com/techtofreedom/this-is-how-i-set-up-an-http-server-on-my-android-phone-1fed20e4f0c8), I figured out a way to do\nthis.\n\nEssentially you download your books using Chrome on the phone, and then use [termux](https://termux.com/), which give a Linux-like environment on the phone, to run a minimal web-server whose output works with the Kobo's browser.\n\n## Setup\n\nAt the termux prompt: (this only needs to be done once)\n\n\n\n\n```{bash}\ntermux-setup-storage # Gives access to the Download folder on android \npkg install python3 # Install Python\n```\n\n\n\n\n## To use\n\nEnable tethering on the phone (I also found I had to disable the VPN running on the phone)\n\nAt the termux prompt:\n\n\n\n\n```{bash}\nifconfig # Note the ip associated with wlan0\ncd ~/storage/downloads # Assuming this is where the book is\npython -m http.server 8080\n```\n\n\n\n\nOn the Kobo, connect to the phone's hotspot, open the browser (more, beta features),\nand navigate to http://<phone's ip>:8080  This gives a very basic directory listing, which works OK on the Kobo\n\n",
    "supporting": [
      "kobo_files"
    ],
    "filters": [],
    "includes": {}
  }
}